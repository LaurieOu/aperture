******* nested for loop to determine photos inclusion within a collection. (BAD)! Optimize later *******
- backend validation for uniqueness within scope of the other id (photo, collection) only want one!


Questions: CSS trick for the view collection page. How to prevent it from squishing horizontally? Is this possible without javascript?

Tags: basic approach... currently using taggable and curious how the parameters should look for something like this when instantiating. Unless just assigning the photo/collection.tags does all the magic for me like with the join table.

TAGS
	- photo upload form / collection upload form should support input of tags
	- tag store, constants, etc.

	- How to instantiate new tags, what to assign the taggable/elements. ...





TASKS FOR TOMORROW:

	BIG ITEMS:

		MODAL THE SHIT OUTTA THE SIGN IN AND SIGN UP

		MAKE THE PHOTO DETAIL "LOOK" LIKE A MODAL (escape goes back, click on a little X in the corner)

		STYLE THE COLLECTION AND USER PROFILE PAGE -> parallax, make pretty
			> need to add key collection photo? / somehow grab the photos from the current user profile page or something...

		ADD USER INFORMATION -> avatar, username, fname, lname
			> figure out how to grab the user information for the comment models

		SEARCH

	smaller items:

		change the masonry implementation on main page to the style on the profile page
		style forms
		style the collection photo to not squish horizontally!
			> some way to grab the photo width and set that as the minimum width? 
			> But it needs to be propportional still to the change in the height.




TAG NOTES
	- creation is just put in the title if it doesn't already exist

	- then with photo upload / collection creation send along the array of tags and set those in the controller

	- each form should access the tag store, if tags are made that don't exist yet send another request to create those,
		on completion grab the ids sent back and bundle with the other ajax call?
			> possibly overthinking this.


	-->> send all tags by title, then in the controller for creation/update grab the tags that have or haven't been created and return the ids of them all in the end. 
		-> Tag Model method to look for tags by title then iterate over and create those that have not yet been made.
		

		-> tag store
			- grab all of the tags and house.
			- what needs access to this?
				> tag_form_component
				> search

	









Other Random Notes:
	User
		> add uniqueness validation for email on database side
		> add a required username for users

	Masonry -> copy the strategy used for the profile images! 

	Optimize:
		> figure out way to optimize the display of high resolution phptos. THe feed doesnt need all these full resolution versions of the image!

	Style:
		- when click on search bar placeholder text disappear (even before the user starts typing)

		Nice little menu once users are logged in for navbar
		http://codepen.io/alexcican/pen/gsFpd




